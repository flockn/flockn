{"version":3,"sources":["src/texture/label.js"],"names":[],"mappings":";;;;;;;;;;qBAAoB,UAAU;;kCACL,wBAAwB;;;;IAE3C,YAAY,GACL,SADP,YAAY,CACJ,OAAO,EAAE;wBADjB,YAAY;;;AAGd,MAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AACtB,MAAI,CAAC,IAAI,GAAG;AACV,QAAI,EAAE,EAAE;AACR,QAAI,EAAE,OAAO;AACb,SAAK,EAAE,OAVL,KAAK,CAUM,KAAK,EAAE;AACpB,cAAU,EAAE,EAAE;GACf,CAAC;;AAEF,MAAI,CAAC,KAAK,GAAG;AACX,KAAC,EAAE,QAAQ;AACX,KAAC,EAAE,QAAQ;GACZ,CAAC;AACF,MAAI,CAAC,KAAK,GAAG,CAAC,CAAC;AACf,MAAI,CAAC,MAAM,GAAG,CAAC,CAAC;;AAEhB,MAAI,IAAI,GAAG,EAAE,CAAC;;AAEd,QAAM,CAAC,cAAc,CAAC,IAAI,EAAE,MAAM,EAAE;AAClC,OAAG,EAAE,eAAY;AACf,aAAO,IAAI,CAAC;KACb;AACD,OAAG,EAAE,aAAU,KAAK,EAAE;AACpB,UAAI,GAAG,KAAK,CAAC;;;;AAIb,UAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAC5C,aAAO,CAAC,SAAS,GAAG,IAAI,CAAC;AACzB,aAAO,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;AACpC,aAAO,CAAC,KAAK,CAAC,IAAI,GAAG,SAAS,CAAC;AAC/B,aAAO,CAAC,KAAK,CAAC,GAAG,GAAG,SAAS,CAAC;AAC9B,aAAO,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AAC/C,aAAO,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;AAC1C,aAAO,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;;AAEtC,UAAI,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAA,UAAU,EAAI;AACzC,gBAAQ,UAAU;AAChB,eAAK,MAAM;AACT,mBAAO,CAAC,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC;AAClC,kBAAM;AAAA,AACR,eAAK,QAAQ;AACX,mBAAO,CAAC,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC;AACnC,kBAAM;AAAA,AACR,eAAK,WAAW;AACd,mBAAO,CAAC,KAAK,CAAC,cAAc,GAAG,WAAW,CAAC;AAC3C,kBAAM;AAAA,AACR;AACE,kBAAM;AAAA,SACT;OACF,CAAC,CAAC;;AAEH,cAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;;AAEnC,UAAI,CAAC,KAAK,GAAG,OAAO,CAAC,WAAW,CAAC;AACjC,UAAI,CAAC,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC;AACnC,UAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;;AAErB,cAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;;AAEnC,aAAO,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;KACjC;GACF,CAAC,CAAC;CACJ;;AAGH,gCAAa,YAAY,CAAC,CAAC;;qBAEZ,YAAY","file":"src/texture/label.js","sourcesContent":["import {Color} from '../types';\r\nimport serializable from '../mixins/serializable';\r\n\r\nclass TextureLabel {\r\n  constructor(texture) {\r\n    // Default value for `label`\r\n    this.drawable = false;\r\n    this.font = {\r\n      size: 10,\r\n      name: 'Arial',\r\n      color: Color.black(),\r\n      decoration: []\r\n    };\r\n\r\n    this.align = {\r\n      x: 'center',\r\n      y: 'center'\r\n    };\r\n    this.width = 0;\r\n    this.height = 0;\r\n\r\n    var text = '';\r\n\r\n    Object.defineProperty(this, 'text', {\r\n      get: function () {\r\n        return text;\r\n      },\r\n      set: function (value) {\r\n        text = value;\r\n\r\n        // Calculate the size of the label and update the dimensions\r\n        // TODO: This should be handled somewhere else, but I'm not sure where\r\n        var tmpElem = document.createElement('div');\r\n        tmpElem.innerText = text;\r\n        tmpElem.style.position = 'absolute';\r\n        tmpElem.style.left = '-9999px';\r\n        tmpElem.style.top = '-9999px';\r\n        tmpElem.style.fontSize = this.font.size + 'px';\r\n        tmpElem.style.fontFamily = this.font.name;\r\n        tmpElem.style.color = this.font.color;\r\n\r\n        this.font.decoration.forEach(decoration => {\r\n          switch (decoration) {\r\n            case 'bold':\r\n              tmpElem.style.fontWeight = 'bold';\r\n              break;\r\n            case 'italic':\r\n              tmpElem.style.fontStyle = 'italic';\r\n              break;\r\n            case 'underline':\r\n              tmpElem.style.textDecoration = 'underline';\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        });\r\n\r\n        document.body.appendChild(tmpElem);\r\n\r\n        this.width = tmpElem.clientWidth;\r\n        this.height = tmpElem.clientHeight;\r\n        this.drawable = true;\r\n\r\n        document.body.removeChild(tmpElem);\r\n\r\n        texture.trigger('label-loaded');\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nserializable(TextureLabel);\r\n\r\nexport default TextureLabel;\r\n"]}