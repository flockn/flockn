{"version":3,"sources":["src/mixins/updateable.js"],"names":[],"mappings":";;;;;;;;iCAAyB,uBAAuB;;;;AAEhD,IAAI,QAAQ,GAAG,+BAAa,QAAQ,CAAC,CAAC;;;;;AAKtC,IAAI,SAAS,GAAG,SAAS,UAAU,GAAG;;;;AAEpC,MAAI,CAAC,EAAE,CAAC,QAAQ,EAAE,UAAA,EAAE,EAAI;AACtB,QAAI,CAAC,QAAQ,CAAC,IAAI,OAAM,EAAE;AACxB,aAAO;KACR;;AAED,UAAK,QAAQ,CAAC,OAAO,CAAC,UAAA,KAAK,EAAI;AAC7B,UAAI,KAAK,CAAC,MAAM,EAAE;AAChB,aAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;OAC7B;KACF,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ,CAAC;;qBAEa,SAAS","file":"src/mixins/updateable.js","sourcesContent":["import checkForFlag from '../utils/checkforflag';\r\n\r\nvar isStatic = checkForFlag('static');\r\n\r\n// TODO: This is not completely how I want it be as it only sets the children as static and not the element itself\r\n// TODO: Evaluate if it's a good idea if static elements shouldn't be able to interact with - similar to PIXI's\r\n//  interactive property\r\nvar updatable = function updateable() {\r\n  // Update all children\r\n  this.on('update', dt => {\r\n    if (!isStatic.call(this)) {\r\n      return;\r\n    }\r\n\r\n    this.children.forEach(child => {\r\n      if (child.update) {\r\n        child.trigger('update', dt);\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nexport default updatable;\r\n"]}