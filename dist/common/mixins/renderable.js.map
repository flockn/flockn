{"version":3,"sources":["src/mixins/renderable.js"],"names":[],"mappings":";;;;;;;;iCAAyB,uBAAuB;;;;wBAC3B,aAAa;;;;AAElC,IAAI,SAAS,GAAG,+BAAa,SAAS,CAAC,CAAC;;AAExC,IAAI,UAAU,GAAG,SAAS,UAAU,GAAG;;;AACrC,MAAI,CAAC,EAAE,CAAC,QAAQ,EAAE,YAAM;;AAEtB,QAAI,CAAC,SAAS,CAAC,IAAI,OAAM,EAAE;AACzB,aAAO;KACR;;;AAGD,0BAAS,OAAO,CAAC,QAAQ,QAAO,CAAC;;;AAGjC,UAAK,QAAQ,CAAC,OAAO,CAAC,UAAA,KAAK;aAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC;KAAA,CAAC,CAAC;GACzD,CAAC,CAAC;CACJ,CAAC;;qBAEa,UAAU","file":"src/mixins/renderable.js","sourcesContent":["import checkForFlag from '../utils/checkforflag';\r\nimport Graphics from '../graphics';\r\n\r\nvar isVisible = checkForFlag('visible');\r\n\r\nvar renderable = function renderable() {\r\n  this.on('render', () => {\r\n    // Only render if element is visible\r\n    if (!isVisible.call(this)) {\r\n      return;\r\n    }\r\n\r\n    // Emit `render` event on the `Graphics` object\r\n    Graphics.trigger('render', this);\r\n\r\n    // Render all children elements\r\n    this.children.forEach(child => child.trigger('render'));\r\n  });\r\n};\r\n\r\nexport default renderable;\r\n"]}