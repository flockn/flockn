{"version":3,"sources":["src/mixins/addable.js"],"names":[],"mappings":";;;;;;;;wBAAqB,iBAAiB;;;;AAEtC,IAAI,OAAO,GAAG,SAAS,OAAO,CAAC,OAAO,EAAE,aAAa,EAAE,OAAO,EAAE;;AAE9D,MAAI,KAAK,GAAG,SAAS,KAAK,CAAC,KAAK,EAAW;sCAAN,IAAI;AAAJ,UAAI;;;;;;;AAMvC,QAAI,OAAO,KAAK,KAAK,UAAU,EAAE;AAC/B,YAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;KACjD;;AAED,SAAK,GAAG,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC;;AAE3B,iBAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC1B,SAAK,CAAC,MAAM,GAAG,IAAI,CAAC;;AAEpB,QAAI,OAAO,EAAE;AACX,aAAO,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;KAC3B;;AAED,0BAAS,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;;;AAG/B,QAAI,KAAK,CAAC,KAAK,EAAE;AACf,WAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;KACnB;;AAED,SAAK,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;GACnC,CAAC;;AAEF,SAAO,YAAW;AAChB,QAAI,IAAI,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACpC,QAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;;AAEnB,WAAO,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;GACtC,CAAC;CAEH,CAAC;;qBAEa,OAAO","file":"src/mixins/addable.js","sourcesContent":["import Graphics from 'flockn/graphics';\n\nvar addable = function addable(Factory, groupInstance, extraFn) {\n\n  var adder = function adder(child, ...args) {\n\n    // I have decided against letting anything other through than functions\n    // I feel that it more complexity than it tried to solve and I had to handle some edge cases\n    // and more thorough type checking\n\n    if (typeof child !== 'function') {\n      throw new Error('A child has to be a function');\n    }\n\n    child = new Factory(child);\n       \n    groupInstance.push(child);\n    child.parent = this;\n\n    if (extraFn) {\n      extraFn.call(this, child);\n    }\n\n    Graphics.trigger('add', child);\n\n    // Only call apply if it's available. Models for example don't have one\n    if (child.apply) {\n      child.apply(args);\n    }\n\n    child.trigger('add', child, args);\n  };\n\n  return function() {\n    var args = [].slice.call(arguments);\n    args.unshift(this);\n\n    return adder.bind.apply(adder, args);\n  };\n\n};\n\nexport default addable;\n"]}