{"version":3,"sources":["src/mixins/addable.js"],"names":[],"mappings":";;;;;;;;wBAAqB,iBAAiB;;;;AAEtC,IAAI,OAAO,GAAG,SAAS,OAAO,CAAC,OAAO,EAAE,aAAa,EAAE,OAAO,EAAE;;AAE9D,QAAI,KAAK,GAAG,SAAS,KAAK,CAAC,KAAK,EAAW;0CAAN,IAAI;AAAJ,gBAAI;;;;;;;AAMvC,YAAI,OAAO,KAAK,KAAK,UAAU,EAAE;AAC/B,kBAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;SACjD;;AAED,aAAK,GAAG,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC;;AAE3B,qBAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC1B,aAAK,CAAC,MAAM,GAAG,IAAI,CAAC;;AAEpB,YAAI,OAAO,EAAE;AACX,mBAAO,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SAC3B;;AAED,8BAAS,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;;;AAG/B,YAAI,KAAK,CAAC,KAAK,EAAE;AACf,iBAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SACnB;;AAED,aAAK,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;KACnC,CAAC;;AAEF,WAAO,YAAW;AAChB,YAAI,IAAI,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACpC,YAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;;AAEnB,eAAO,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;KACtC,CAAC;CAEH,CAAC;;qBAEa,OAAO","file":"src/mixins/addable.js","sourcesContent":["import Graphics from 'flockn/graphics';\r\n\r\nvar addable = function addable(Factory, groupInstance, extraFn) {\r\n\r\n  var adder = function adder(child, ...args) {\r\n\r\n    // I have decided against letting anything other through than functions\r\n    // I feel that it more complexity than it tried to solve and I had to handle some edge cases\r\n    // and more thorough type checking\r\n\r\n    if (typeof child !== 'function') {\r\n      throw new Error('A child has to be a function');\r\n    }\r\n\r\n    child = new Factory(child);\r\n       \r\n    groupInstance.push(child);\r\n    child.parent = this;\r\n\r\n    if (extraFn) {\r\n      extraFn.call(this, child);\r\n    }\r\n\r\n    Graphics.trigger('add', child);\r\n\r\n    // Only call apply if it's available. Models for example don't have one\r\n    if (child.apply) {\r\n      child.apply(args);\r\n    }\r\n\r\n    child.trigger('add', child, args);\r\n  };\r\n\r\n  return function() {\r\n    var args = [].slice.call(arguments);\r\n    args.unshift(this);\r\n\r\n    return adder.bind.apply(adder, args);\r\n  };\r\n\r\n};\r\n\r\nexport default addable;\r\n"]}