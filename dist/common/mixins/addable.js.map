{"version":3,"sources":["src/mixins/addable.js"],"names":[],"mappings":";;;;IAAO,QAAQ,2BAAM,iBAAiB;;AAEtC,IAAI,OAAO,GAAG,SAAS,OAAO,CAAC,OAAO,EAAE,aAAa,EAAE,OAAO,EAAE;AAE9D,MAAI,KAAK,GAAG,SAAS,KAAK,CAAC,KAAK,EAAW;sCAAN,IAAI;AAAJ,UAAI;;;AAEvC,QAAI,EAAG,KAAK,YAAY,OAAO,CAAA,AAAC,EAAE;AAChC,UAAK,OAAO,KAAK,KAAK,QAAQ,EAAE;AAC9B,YAAI,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE;AACpD,eAAK,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;SAC3C;OACF,MAAM;AACL,YAAK,OAAO,KAAK,KAAK,UAAU,EAAE;AAChC,eAAK,GAAG,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC;SAC5B,MAAM;;AAEL,eAAK,GAAG,IAAI,OAAO,CAAC,YAAW;AAC7B,kBAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,UAAS,GAAG,EAAE;AACvC,kBAAI,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;aACxB,EAAE,IAAI,CAAC,CAAC;WACV,CAAC,CAAC;SACJ;OACF;KACF;AACD,iBAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC1B,SAAK,CAAC,MAAM,GAAG,IAAI,CAAC;;AAEpB,QAAI,OAAO,EAAE;AACX,aAAO,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;KAC3B;;AAED,YAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;;;AAG/B,QAAI,KAAK,CAAC,KAAK,EAAE;AACf,WAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;KACnB;;AAED,SAAK,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;GACnC,CAAC;;AAEF,SAAO,YAAW;AAChB,QAAI,IAAI,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACpC,QAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;;AAEnB,WAAO,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;GACtC,CAAC;CAEH,CAAC;;iBAEa,OAAO","file":"src/mixins/addable.js","sourcesContent":["import Graphics from 'flockn/graphics';\n\nvar addable = function addable(Factory, groupInstance, extraFn) {\n\n  var adder = function adder(child, ...args) {\n\n    if (!( child instanceof Factory)) {\n      if ( typeof child === 'string') {\n        if (Object.hasOwnProperty.call(Factory.store, child)) {\n          child = new Factory(Factory.store[child]);\n        }\n      } else {\n        if ( typeof child === 'function') {\n          child = new Factory(child);\n        } else {\n          // TODO: This should be also able to deep assign properties\n          child = new Factory(function() {\n            Object.keys(child).forEach(function(key) {\n              this[key] = child[key];\n            }, this);\n          });\n        }\n      }\n    }\n    groupInstance.push(child);\n    child.parent = this;\n\n    if (extraFn) {\n      extraFn.call(this, child);\n    }\n\n    Graphics.trigger('add', child);\n\n    // Only call apply if it's available. Models for example don't have one\n    if (child.apply) {\n      child.apply(args);\n    }\n\n    child.trigger('add', child, args);\n  };\n\n  return function() {\n    var args = [].slice.call(arguments);\n    args.unshift(this);\n\n    return adder.bind.apply(adder, args);\n  };\n\n};\n\nexport default addable;\n"]}