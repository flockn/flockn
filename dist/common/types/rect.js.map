{"version":3,"sources":["src/types/rect.js"],"names":[],"mappings":";;;;;;IAAO,OAAO,2BAAM,sBAAsB;;IAEpC,IAAI;AACG,WADP,IAAI,GACgC;QAA5B,CAAC,gCAAG,CAAC;QAAE,CAAC,gCAAG,CAAC;QAAE,CAAC,gCAAG,CAAC;QAAE,CAAC,gCAAG,CAAC;;0BADlC,IAAI;;AAEN,QAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACX,QAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACX,QAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACX,QAAI,CAAC,CAAC,GAAG,CAAC,CAAC;GACZ;;AANG,MAAI,WAQR,KAAK,GAAA,iBAAG;AACN,WAAO,IAAI,IAAI,CAAC,EAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAC,CAAC,CAAC;GAC/D;;AAVG,MAAI,WAYR,MAAM,GAAA,kBAAG;AACP,WAAO,EAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAC,CAAC;GACrD;;AAdG,MAAI,WAgBR,QAAQ,GAAA,oBAAG;AACT,WAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;GACtC;;AAlBG,MAAI,CAoBD,UAAU,GAAA,oBAAC,GAAG,EAAE;AACrB,QAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;;AAE1B,WAAO,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;GAC7C;;AAxBG,MAAI,WA0BR,MAAM,GAAA,kBAAG;AACP,WAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,GAAI,IAAI,CAAC,CAAC,GAAG,CAAC,AAAC,EAAE,IAAI,CAAC,CAAC,GAAI,IAAI,CAAC,CAAC,GAAG,CAAC,AAAC,CAAC,CAAC;GAClE;;AA5BG,MAAI,WA8BR,QAAQ,GAAA,kBAAC,MAAM,EAAE;AACf,WAAO,AAAC,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAM,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,AAAC,IAAK,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,AAAC,IAAK,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,AAAC,CAAC;GACrH;;SAhCG,IAAI;;;iBAmCK,IAAI","file":"src/types/rect.js","sourcesContent":["import Vector2 from 'flockn/types/vector2';\n\nclass Rect {\n  constructor(x = 0, y = 0, w = 0, h = 0) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n  }\n\n  clone() {\n    return new Rect({x: this.x, y: this.y, w: this.w, h: this.h});\n  }\n\n  toJSON() {\n    return {x: this.x, y: this.y, w: this.w, h: this.h};\n  }\n\n  toString() {\n    return JSON.stringify(this.toJSON());\n  }\n\n  static fromString(str) {\n    var obj = JSON.parse(str);\n\n    return new Rect(obj.x, obj.y, obj.w, obj.h);\n  }\n\n  center() {\n    return new Vector2(this.x + (this.w / 2), this.y + (this.h / 2));\n  }\n\n  contains(vector) {\n    return (vector.x >= this.x) && (vector.y >= this.y) && (vector.x < this.x + this.w) && (vector.y < this.y + this.h);\n  }\n}\n\nexport default Rect;\n"]}