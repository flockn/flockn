{"version":3,"sources":["src/graphics/rootelement.js"],"names":[],"mappings":";;AAAA,IAAI,iBAAiB,GAAG,SAAS,iBAAiB,CAAC,WAAW,EAAE,OAAO,EAAE;;;AAGvE,MAAI,aAAa,GAAG,CAAC,YAAW;AAC9B,QAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;AAC1B,UAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC;AACzB,aAAO,IAAI,CAAC,SAAS,CAAC;KACvB,MAAM;AACL,UAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;AACrC,eAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;OAChC;KACF;GACF,CAAA,CAAE,IAAI,CAAC,IAAI,CAAC,CAAC;;;AAGd,MAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,MAAM,CAAC,UAAU,CAAC;AAC7C,MAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,WAAW,CAAC;;;AAGhD,MAAI,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;;;AAGzD,MAAI,WAAW,IAAI,IAAI,EAAE;AACvB,QAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;AAClD,WAAO,CAAC,EAAE,GAAG,aAAa,CAAC,WAAW,EAAE,CAAC;AACzC,YAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;;AAEnC,eAAW,GAAG,OAAO,CAAC;GACvB;;AAED,aAAW,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;;AAGrF,aAAW,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;AACxC,aAAW,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAC5C,aAAW,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;;;;;AAK9C,SAAO,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;;;AAGhC,MAAI,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,EAAE;AAClC,eAAW,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;AAC/B,eAAW,CAAC,KAAK,CAAC,UAAU,GAAG,AAAC,IAAI,CAAC,KAAK,GAAI,CAAC,GAAG,AAAC,GAAI,IAAI,CAAC;GAC7D;;AAED,MAAI,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW,EAAE;AACpC,eAAW,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;AAC9B,eAAW,CAAC,KAAK,CAAC,SAAS,GAAG,AAAC,IAAI,CAAC,KAAK,GAAI,CAAC,GAAG,AAAC,GAAI,IAAI,CAAC;GAC5D;;;AAGD,SAAO,WAAW,CAAC;CACpB,CAAC;;iBAEa,iBAAiB","file":"src/graphics/rootelement.js","sourcesContent":["var createRootElement = function createRootElement(elementName, extraFn) {\n  // Sets the container name: If none is given, set the id of the object.\n  // If a `#` is prepended to the string, cut it off\n  var containerName = (function() {\n    if (this.container == null) {\n      this.container = this.id;\n      return this.container;\n    } else {\n      if (this.container.indexOf('#') === 0) {\n        return this.container.slice(1);\n      }\n    }\n  }).call(this);\n\n  // Set the dimensions of the object. If none are given, it should be the inside of the browser's window\n  this.width = this.width || window.innerWidth;\n  this.height = this.height || window.innerHeight;\n\n  // Try to get the HTML element by using `containerName`\n  var rootElement = document.getElementById(containerName);\n\n  // If nothing was found, create the element\n  if (rootElement == null) {\n    var element = document.createElement(elementName);\n    element.id = containerName.toLowerCase();\n    document.body.appendChild(element);\n\n    rootElement = element;\n  }\n\n  rootElement.className = [this.type.toLowerCase(), this.name.toLowerCase()].join(' ');\n\n  // Set the dimensions of the `rootElement`\n  rootElement.style.position = 'absolute';\n  rootElement.style.width = this.width + 'px';\n  rootElement.style.height = this.height + 'px';\n\n  // Allow some extra functionality to happen here.\n  // It should be called on the same context and the\n  // `rootElement` is passed in as a parameter\n  extraFn.call(this, rootElement);\n\n  // Center the element if it's smaller than the inside of the browser's window\n  if (this.width < window.innerWidth) {\n    rootElement.style.left = '50%';\n    rootElement.style.marginLeft = (this.width * (-0.5)) + 'px';\n  }\n\n  if (this.height < window.innerHeight) {\n    rootElement.style.top = '50%';\n    rootElement.style.marginTop = (this.width * (-0.5)) + 'px';\n  }\n\n  // Return the element, in case someone wants to meddle with it\n  return rootElement;\n};\n\nexport default createRootElement;\n"]}