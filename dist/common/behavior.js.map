{"version":3,"sources":["src/behavior.js"],"names":[],"mappings":";;;;;;;;IAAO,IAAI,2BAAM,aAAa;;IACvB,KAAK,2BAAM,cAAc;;4BAEgB,eAAe;;IAAvD,OAAO,iBAAP,OAAO;IAAE,UAAU,iBAAV,UAAU;IAAE,YAAY,iBAAZ,YAAY;;;;;IAKnC,QAAQ;AACD,WADP,QAAQ,CACA,UAAU,EAAE;0BADpB,QAAQ;;AAEV,qBAAM,UAAU,EAAE,UAAU,CAAC,CAAC;;;AAG9B,QAAI,CAAC,UAAU,GAAG,IAAI,CAAC;;;AAGvB,cAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;GACvB;;YATG,QAAQ;;AAAR,UAAQ,WAWZ,WAAW,GAAA,uBAAG;;AAEZ,QAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,UAAS,KAAK,EAAE;AAC/D,WAAK,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;KACpC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC;GAC5B;;AAhBG,UAAQ,WAkBZ,cAAc,GAAA,0BAAG,EAEhB;;SApBG,QAAQ;GAAS,IAAI;;AAuB3B,YAAY,CAAC,QAAQ,CAAC,CAAC;;iBAER,QAAQ","file":"src/behavior.js","sourcesContent":["import Base from 'flockn/base';\nimport Group from 'flockn/group';\n\nimport {addable, updateable, serializable} from 'flockn/mixins';\n\n\n// Behaviors only provide logic. There is no rendering involved.\n// Behaviors can attach any number of behaviors to itself\nclass Behavior extends Base {\n  constructor(descriptor) {\n    super('Behavior', descriptor);\n\n    // Reference to the game object itself\n    this.gameObject = null;\n\n    // Mix in `updateable`\n    updateable.call(this);\n  }\n\n  addBehavior() {\n    // When a behavior is added, the reference to the game object is set\n    this.queue.push(addable(Behavior, this.children, function(child) {\n      child.gameObject = this.gameObject;\n    }).apply(this, arguments));\n  }\n\n  removeBehavior() {\n\n  }\n}\n\nserializable(Behavior);\n\nexport default Behavior;\n"]}