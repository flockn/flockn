{"version":3,"sources":["src/behavior.js"],"names":[],"mappings":";;;;;;;;;;;;oBAAiB,QAAQ;;;;qBACP,SAAS;;;;sBAEqB,UAAU;;;;;IAKpD,QAAQ;AACD,WADP,QAAQ,CACA,UAAU,EAAE;0BADpB,QAAQ;;AAEV,qBAAM,UAAU,EAAE,UAAU,CAAC,CAAC;;;AAG9B,QAAI,CAAC,UAAU,GAAG,IAAI,CAAC;;;AAGvB,YAba,UAAU,CAaZ,IAAI,CAAC,IAAI,CAAC,CAAC;GACvB;;YATG,QAAQ;;AAAR,UAAQ,WAWZ,WAAW,GAAA,uBAAG;;AAEZ,QAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAlBZ,OAAO,CAkBa,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,UAAS,KAAK,EAAE;AAC/D,WAAK,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;KACpC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC;GAC5B;;AAhBG,UAAQ,WAkBZ,cAAc,GAAA,0BAAG,EAEhB;;SApBG,QAAQ;;;AAuBd,QA5B6B,YAAY,CA4B5B,QAAQ,CAAC,CAAC;;qBAER,QAAQ","file":"src/behavior.js","sourcesContent":["import Base from './base';\r\nimport Group from './group';\r\n\r\nimport {addable, updateable, serializable} from './mixins';\r\n\r\n\r\n// Behaviors only provide logic. There is no rendering involved.\r\n// Behaviors can attach any number of behaviors to itself\r\nclass Behavior extends Base {\r\n  constructor(descriptor) {\r\n    super('Behavior', descriptor);\r\n\r\n    // Reference to the game object itself\r\n    this.gameObject = null;\r\n\r\n    // Mix in `updateable`\r\n    updateable.call(this);\r\n  }\r\n\r\n  addBehavior() {\r\n    // When a behavior is added, the reference to the game object is set\r\n    this.queue.push(addable(Behavior, this.children, function(child) {\r\n      child.gameObject = this.gameObject;\r\n    }).apply(this, arguments));\r\n  }\r\n\r\n  removeBehavior() {\r\n\r\n  }\r\n}\r\n\r\nserializable(Behavior);\r\n\r\nexport default Behavior;\r\n"]}