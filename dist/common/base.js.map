{"version":3,"sources":["src/base.js"],"names":[],"mappings":"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","file":"src/base.js","sourcesContent":["import EventMap from 'eventmap';\r\n\r\nimport {Input} from 'gamebox';\r\n\r\nimport Audio from './audio';\r\nimport Group from './group';\r\nimport World from './world';\r\n\r\nvar objectIndex = 0;\r\n\r\nvar prependMax = 10000;\r\n\r\nvar numToIdString = function(num) {\r\n  var stringNum = num + '';\r\n\r\n  if (num >= prependMax) {\r\n    return stringNum;\r\n  } else {\r\n    var prependLength = (prependMax + '').length - stringNum.length;\r\n    for (var i = 0; i < prependLength; i++) {\r\n      stringNum = '0' + stringNum;\r\n    }\r\n\r\n    return stringNum;\r\n  }\r\n};\r\n\r\nclass Base extends EventMap {\r\n  constructor(type = 'Base', descriptor = function() {}) {\r\n    super();\r\n\r\n    // Count up `objectIndex` and stringify it\r\n    var currentObject = numToIdString(++objectIndex);\r\n\r\n    this.type = type;\r\n\r\n    var internalId = `${this.type}-${Date.now()}-${currentObject}`;\r\n\r\n    this.name = internalId;\r\n\r\n    // The `id` property is read-only and returns the type and the stringified object index\r\n    Object.defineProperty(this, 'id', {\r\n      get: function() {\r\n        return internalId;\r\n      },\r\n      enumerable: true\r\n    });\r\n\r\n    // Save the descriptor\r\n    this.descriptor = descriptor;\r\n\r\n    // Create a new group for all children elements\r\n    this.children = new Group();\r\n\r\n    // Add a queue: All addable elements will be pushed into the queue first and called after everything else in\r\n    // the `descriptor` has been called\r\n    this.queue = [];\r\n\r\n    this.parent = null;\r\n\r\n    // `Input` should be available in instances derived from `Base`\r\n    this.input = Input;\r\n\r\n    // As should `Audio`\r\n    this.audio = Audio;\r\n\r\n    // Emit an event\r\n    this.trigger('constructed');\r\n  }\r\n\r\n  apply(data) {\r\n    // TODO: Reflect if function check should be enforced here\r\n    if (this.descriptor) {\r\n      // If args is not an array or array-like, provide an empty one\r\n      data = data || {};\r\n\r\n      // Call the `descriptor` property with `args`\r\n\r\n      // object, {data, World}\r\n      this.descriptor.call(this, this, {data, World});\r\n\r\n      // Trigger an event\r\n      this.trigger('execute');\r\n\r\n      // TODO: Impose an order in the queue, such as:\r\n      // (Game) -> Scene -> GameObject -> Behavior -> Model\r\n\r\n      // TODO: Implement z-order\r\n      this.queue.forEach(function(q) {\r\n        q && q();\r\n      });\r\n\r\n      // Reset the queue\r\n      this.queue = [];\r\n\r\n      // Find a way to directly before and after events\r\n      this.trigger('executed');\r\n    }\r\n  }\r\n\r\n  call() {\r\n    // Call `Base#apply` with the arguments object\r\n    this.apply(arguments);\r\n  }\r\n\r\n  // Alias for `Base#call`\r\n  reset() {\r\n    return this.call.apply(this, arguments);\r\n  }\r\n\r\n  closest() {\r\n\r\n  }\r\n\r\n  find() {\r\n\r\n  }\r\n\r\n  log() {\r\n    if (console && console.log) {\r\n      var argArray = [].slice.call(arguments);\r\n\r\n      // Log with `console.log`: Prepend the type and name\r\n      argArray.unshift(':');\r\n      argArray.unshift(this.name);\r\n      argArray.unshift(this.type);\r\n\r\n      return console.log.apply(console, argArray);\r\n    }\r\n  }\r\n}\r\n\r\nBase.queueOrder = ['Game', 'Scene', 'GameObject', 'Behavior', 'Model'];\r\n\r\nexport default Base;\r\n"]}